gather(part_sex, count, -score_range) %>%
separate(c("part", "sex"))
print
sat %>%
select(-contains("total")) %>%
gather(part_sex, count, -score_range) %>%
separate(c("part", "sex")) %>%
print
sat %>%
select(-contains("total")) %>%
gather(part_sex, count, -score_range) %>%
separate(part_sex, c("part", "sex")) %>%
print
submit()
sat %>%
select(-contains("total")) %>%
gather(part_sex, count, -score_range) %>%
separate(part_sex, c("part", "sex")) %>%
group_by(part, sex)
mutate(total = sum(count), prop = count/total
) %>% print
sat %>%
select(-contains("total")) %>%
gather(part_sex, count, -score_range) %>%
separate(part_sex, c("part", "sex")) %>%
group_by(part, sex) %>%
mutate(total = sum(count), prop = count/total
) %>%
print
submit()
s1 <- seq(1, 10, by=2)
s1
s2 <- seq(1, 10, length = 3)
s2
x <- c(1, 3, 8, 25, 100); seq(along = x)
restData$nearMe = restData$neighborhood %in% c("Roland Park","Homeland")
table(restData$nearMe)
fileUrl <-"https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
fileName <- paste("./data/restaurants_", format(Sys.time(), "%Y%m%d"), ".csv", sep = "")
data <- download.file(fileUrl, destfile = fileName)
list.files("./data")
restData <- read.csv(fileName)
s1 <- seq(1, 10, by=2); s1
s2 <- seq(1, 10, length = 3); s2
x <- c(1, 3, 8, 25, 100); seq(along = x)
restData$nearMe = restData$neighborhood %in% c("Roland Park","Homeland")
table(restData$nearMe)
setwd("C:/Users/johnecon/Projects/datasciencecoursera/Getting and Cleaning Data")
fileUrl <-"https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
fileName <- paste("./data/restaurants_", format(Sys.time(), "%Y%m%d"), ".csv", sep = "")
data <- download.file(fileUrl, destfile = fileName)
list.files("./data")
restData <- read.csv(fileName)
restData$nearMe = restData$neighborhood %in% c("Roland Park","Homeland")
table(restData$nearMe)
table(restData)
restData$zipWrong = ifelse(restData$zipCode < 0, T, F)
table(restData$zipWrong)
library("dyplr")
library("dplyr")
restData$zipGroups = cut(restData$zipCode, breaks=quantile(restData$zipCode))
table(restData$zipGroups)
filter
library("Hmisc")
install.packages("Hmisc")
library("Hmisc")
restData$zipGroups = cut2(restData$zipCode, g=4)
table(restData$zipGroups)
restData$zcf <- factor(restData$zipCode)
restData$zcf[1:10]
yesno <- sample(c("yes", "no"), size = 10, replace = T)
yesnofac = factor(yesno, levels = c("yes", "no"))
reslevel(yesnofac, ref = "yes")
yesnofac
relevel(yesnofac, ref = "yes")
as.numeric(yesnofac)
yesnofac
relevel(yesnofac, ref = "yes")
relevel(yesnofac, ref = "no")
library(reshape2)
head(mtcars)
mtcars
mtcars$carname <- rownames(mtcars)
mtcars$carname
class(mtcars)
mtcars["Masda RX4"]
mtcars["Valiant"]
carMelt <- melt(mtcars, id = c("carname", "gear", "cyl")),measure.vars=c("mpg", "hp"))
carMelt <- melt(mtcars, id = c("carname", "gear", "cyl"),measure.vars=c("mpg", "hp"))
carMelt
cylData <- dcast(carMelt, cyl ~ variable
)
cylData <- dcast(carMelt, cyl ~ variable)
cylData
cylData <- dcast(carMelt, cyl ~ variable, mean)
cylData
head(InspectSprays)
head(DF)
# Question 1
fileUrl <-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
fileName <- paste("./data/communities_", format(Sys.time(), "%Y%m%d"), ".csv", sep = "")
data <- download.file(fileUrl, destfile = fileName)
list.files("./data")
DF <- read.csv(fileName)
library("dplyr")
dplyr(DF)
plyr(DF)
?"dplyr"
?plyr
names(DF)
DF %>% filter(ACR == 3, AGS == 6)
aggricalureLogical <- DF %>% filter(ACR == 3, AGS == 6)
which(agricultureLogical)
agricalureLogical <- DF %>% filter(ACR == 3, AGS == 6)
which(agricalureLogical)
agricalureLogical <- DF$ACR == 3 & DF$AGS == 6
which(agricalureLogical)
install.packages("jpeg")
library(jpeg)
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = T)
readJPEG("http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = T)
library(jpeg)
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = T)
readJPEG(".data/getdata jeff.jpg", native = T)
readJPEG(".data/getdata%2Fjeff.jpg", native = T)
readJPEG(".data/getdata_Fjeff.jpg", native = T)
readJPEG(".data/getdata-Fjeff.jpg", native = T)
readJPEG(".data/getdata-jeff.jpg", native = T)
readJPEG("./data/getdata-jeff.jpg", native = T)
DF <- readJPEG(".data/getdata-Fjeff.jpg", native = T)
DF <- readJPEG("./data/getdata-jeff.jpg", native = T)
quantile(DF, probs = c(30,80) )
quantile(DF, probs = c(0.3,0.8) )
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
fileName <- paste("./data/communities_", format(Sys.time(), "%Y%m%d"), ".csv", sep = "")
data <- download.file(fileUrl, destfile = fileName)
DF <- read.csv(fileName)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
fileName <- paste("./data/gdp_", format(Sys.time(), "%Y%m%d"), ".csv", sep = "")
data <- download.file(fileUrl, destfile = fileName)
GDP <- read.csv(fileName)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
fileName <- paste("./data/ed_", format(Sys.time(), "%Y%m%d"), ".csv", sep = "")
data <- download.file(fileUrl, destfile = fileName)
ED <- read.csv(fileName)
names(GDP)
names(ED)
head(GDP)
join(GDP, ED, all = T)
merge(GDP, ED, all = T)
merged = merge(GDP, ED, all = T)
dim(merged)
dim(GDP)
dim(ED)
GDP$Gross.domestic.product.2012
GDP$X
GDP$X.1
GDP$X.2
head(GDP)
ED$CountryCode
merged = merge(GDP, ED, by.x = GDP$X, by.y = ED$CountryCode, all = T)
merged = merge(GDP, ED, by.x = X, by.y = CountryCode, all = T)
merged = merge(GDP, ED, by.x = "X", by.y = "CountryCode", all = T)
dim(merged)
dim(GDP)
dim(ED)
merged = merge(GDP, ED, by.x = "X", by.y = "CountryCode")
dim(merged)
merged = merge(ED, GDP, by.x = "CountryCode", by.y = "X",)
dim(merged)
merged = merge(ED, GDP, by.x = "CountryCode", by.y = "X", all = T)
dim(merged)
?merge
merged = merge(ED, GDP, by.x = "CountryCode", by.y = "X", all = F)
dim(merged)
ED$CountryCode
GDP$X
GDP$X %>% filter(X %in% ED$CountryCode)
data.frame(GDP$X)
data.frame(GDP$X) %>% filter(X == "SYC")
data.frame(GDP$X) %>% filter(GDP.X == "SYC")
data.frame(GDP$X) %>% filter(GDP.X %in% data.frame(ED$CountryCode))
data.frame(ED$CountryCode)
data.frame(GDP$X) %>% filter(GDP.X %in% data.frame(ED$CountryCode)[2])
data.frame(GDP$X) %>% filter(GDP.X %in% data.frame(ED$CountryCode)[1])
data.frame(GDP$X)[1] %>% filter(GDP.X %in% data.frame(ED$CountryCode)[1])
data.frame(GDP$X)[1]
GDP
?match
intersect(GDP, ED, x = X, y = CountryCode)
intersect(GDP, ED, x = "X", y = "CountryCode")
gdp_countries = GDP$X.1
ed_countries = ED$CountryCode
gdp_countries %in% ed_c
gdp_countries %in% ed_countries
ed_countries %in% gdp_countries
gdp_countries
gdp_countries = GDP$X
gdp_countries %in% ed_countries
vector <- gdp_countries %in% ed_countries
factor(vector)
vector
class(vector)
count(vector, x = T)
GDP[vector]
GDP[vector,]
?match
?merge
merged <- merge(GDP, ED, by.x = "X", by.y = "CountryCode")
dim(merged)
head(merged)
merged %>% select(merged$X)
merged$X
merged$CountryCode
merged %>% arrange(desc(Gross.domestic.product.2012))
GDP$Gross.domestic.product.2012
merged %>% arrange(desc(Gross.domestic.product.2012))
merged[13]
head(merged, n=13)
merged[,13]
merged[13,]
GDP
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
fileName <- paste("./data/gdp_", format(Sys.time(), "%Y%m%d"), ".csv", sep = "")
data <- download.file(fileUrl, destfile = fileName)
GDP <- read.csv(fileName)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
fileName <- paste("./data/ed_", format(Sys.time(), "%Y%m%d"), ".csv", sep = "")
data <- download.file(fileUrl, destfile = fileName)
ED <- read.csv(fileName)
merged <- merge(GDP, ED, by.x = , by.y = )
merged <- merge(GDP, ED, by.x = "X", by.y = "CountryCode")
merged <- merge(GDP, ED, by.x = "X", by.y = "CountryCode", all = T)
merged <- merge(GDP, ED, by.x = "X", by.y = "CountryCode", all = F)
merged$X
merged <- merge(GDP, ED, by.x = "X", by.y = "CountryCode", all.x = F)
GDP <- GDP[X != ""]
GDP
head(GDP)
GDP %> filter(X != "")
GDP %> filter(X <> "")
GDP
GDP$X
GDP %>% filter(X != "")
GDP <- GDP %>% filter(X != "")
fileName <- paste("./data/gdp_", format(Sys.time(), "%Y%m%d"), ".csv", sep = "")
data <- download.file(fileUrl, destfile = fileName)
GDP <- read.csv(fileName)
GDPC <- GDP %>% filter(X != "")
# Question 3
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
fileName <- paste("./data/gdp_", format(Sys.time(), "%Y%m%d"), ".csv", sep = "")
data <- download.file(fileUrl, destfile = fileName)
GDP <- read.csv(fileName)
GDPC <- GDP %>% filter(X != "")
merged <- merge(GDPC, ED, by.x = "X", by.y = "CountryCode")
dim(merged)
mergedData=as.data.frame(merge(GDPC,ED,by.x="X",by.y="CountryCode"))
head(GDP)
head(GDP, n=100)
merged %>% arrange(desc(Gross.domestic.product.2012))
res <- merged %>% arrange(desc(Gross.domestic.product.2012))
head(res)
tail(res)
tail(res)
res <- merged %>% filter(!is.na(Gross.domestic.product.2012)) %>% arrange(desc(Gross.domestic.product.2012))
tail(res)
res <- merged %>% filter(!is.na(Gross.domestic.product.2012) & Gross.domestic.product.2012 != "") %>% arrange(desc(Gross.domestic.product.2012))
tail(res)
head(res)
head(res, n=13)
res <- merged %>% filter(!is.na(Gross.domestic.product.2012) & Gross.domestic.product.2012 != "") %>% order_by(desc(Gross.domestic.product.2012))
res <- merged %>% filter(!is.na(Gross.domestic.product.2012) & Gross.domestic.product.2012 != "") %>% order(desc(Gross.domestic.product.2012))
?arrange
res <- merged %>% select(X, Gross.domestic.product.2012) %>% filter(!is.na(Gross.domestic.product.2012) & Gross.domestic.product.2012 != "") %>% arrange(desc(Gross.domestic.product.2012))
dim(res)
head(res)
head(res, n=14)
tail(res, n=14)
res <- merged %>% select(X, as_numeric(Gross.domestic.product.2012)) %>% filter(!is.na(Gross.domestic.product.2012) & Gross.domestic.product.2012 != "") %>% arrange(desc(Gross.domestic.product.2012))
res <- merged %>% select(X, as.numeric(Gross.domestic.product.2012)) %>% filter(!is.na(Gross.domestic.product.2012) & Gross.domestic.product.2012 != "") %>% arrange(desc(Gross.domestic.product.2012))
head(res, n=14)
res <- merged %>% select(X, as.numeric(Gross.domestic.product.2012)) %>% filter(!is.na(Gross.domestic.product.2012) & Gross.domestic.product.2012 != "") %>% arrange(desc(as.numeric(Gross.domestic.product.2012)))
head(res, n=14)
res <- merged %>% select(X, as.numeric(Gross.domestic.product.2012)) %>% filter(!is.na(Gross.domestic.product.2012) & Gross.domestic.product.2012 != "") %>% arrange(desc(X1))
res <- merged %>% filter(!is.na(Gross.domestic.product.2012) & Gross.domestic.product.2012 != "") %>% arrange(desc(X1))
res <- merged %>% filter(!is.na(Gross.domestic.product.2012) & Gross.domestic.product.2012 != "") %>% arrange(desc(X.1))
head(res, n=14)
res <- merged %>% filter(!is.na(X.1) & X.1 != "") %>% arrange(desc(X.1))
head(res, n=14)
GDPC <- GDP %>% filter(X != "" & !is.na(X))
merged <- merge(GDPC, ED, by.x = "X", by.y = "CountryCode")
res <- merged %>% filter(!is.na(X.1) & X.1 != "") %>% arrange(desc(X.1))
head(res, n=14)
res
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
fileName <- paste("./data/gdp_", format(Sys.time(), "%Y%m%d"), ".csv", sep = "")
data <- download.file(fileUrl, destfile = fileName)
GDP <- read.csv(fileName)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
fileName <- paste("./data/ed_", format(Sys.time(), "%Y%m%d"), ".csv", sep = "")
data <- download.file(fileUrl, destfile = fileName)
ED <- read.csv(fileName)
GDPC <- GDP %>% filter(X != "" & !is.na(X))
GDPC
dim(GDPC)
merged <- merge(GDPC, ED, by.x = "X", by.y = "CountryCode")
dim(merged)
head(merged)
head(merged)
merged$X.1
merged$Gross.domestic.product.2012
merged %>% arrange(Gross.domestic.product.2012)
merged %>% arrange(Gross.domestic.product.2012)
arranged <- merged %>% arrange(Gross.domestic.product.2012)
head(arranged)
head(arranged)
arranged <- merged %>% filter(Gross.domestic.product.2012 != "" & !is.na(Gross.domestic.product.2012)) %>% arrange(Gross.domestic.product.2012)
head(arranged)
head(arranged)
arranged <- merged %>% filter(Gross.domestic.product.2012 != "" & !is.na(Gross.domestic.product.2012)) %>% arrange(desc(Gross.domestic.product.2012))
arranged <- merged %>% filter(Gross.domestic.product.2012 != "" &
!is.na(Gross.domestic.product.2012)) %>% arrange(desc(Gross.domestic.product.2012))
head(arranged, n=14)
arranged <- merged %>% filter(Gross.domestic.product.2012 != "" & !is.na(Gross.domestic.product.2012)) %>% arrange(Gross.domestic.product.2012)
head(arranged)
tail(arranged)
tail(arranged)
?arrange
?arrange
tail(arranged, n=14)
arranged <- merged %>% mutate(GDP = as.numeric(Gross.domestic.product.2012)) %>% filter(GDP != "" & !is.na(GDP)) %>% arrange(desc(GDP))
tail(arranged, n=14)
head(res)
arranged <- merged %>% mutate(GDP = as.numeric(Gross.domestic.product.2012)) %>% filter(GDP != "" & !is.na(GDP)) %>% arrange(desc(GDP))
head(arranged,n=14)
merged$Gross.domestic.product.2012
class(merged$Gross.domestic.product.2012)
head(arranged,n=14)
head(arranged,n=14)
merged %>% mutate(GDP = as.numeric(Gross.domestic.product.2012)) %>% filter(GDP != "" & !is.na(GDP)) %>% arrange(desc(GDP)) %>% head(n=14)
merged %>% mutate(GDP = as.numeric(Gross.domestic.product.2012)) %>% filter(GDP != "" & !is.na(GDP)) %>% arrange(desc(GDP)) %>% head(n=14) %>% select(X, GDP)
merged %>% mutate(GDP = as.numeric(Gross.domestic.product.2012)) %>% filter(GDP != "" & !is.na(GDP)) %>% arrange(desc(GDP)) %>% head(n=14) %>% select(X, GDP, Gross.domestic.product.2012)
tail(arranged,n=14)
merged$Gross.domestic.product.2012
tail(arranged,n=14)
merged %>% mutate(GDP = as.numeric(X.3)) %>% filter(GDP != "" & !is.na(GDP)) %>% arrange(desc(GDP)) %>% head(n=14) %>% select(X, GDP, X.3)
merged %>% mutate(GDP = X.3) %>% filter(GDP != "" & !is.na(GDP)) %>% arrange(desc(GDP)) %>% head(n=14) %>% select(X, GDP, X.3)
merged %>% mutate(GDP = X.3) %>% filter(GDP != "" & !is.na(GDP)) %>% arrange(desc(GDP)) %>% head(n=14)
merged %>% select(X, X.3) %>% mutate(GDP = X.3) %>% filter(GDP != "" & !is.na(GDP)) %>% arrange(desc(GDP)) %>% head(n=14)
merged %>% select(X, X.3) %>% mutate(GDP = X.3) %>% filter(GDP != "" & !is.na(GDP)) %>% arrange(GDP) %>% head(n=14)
merged %>% select(X, X.3) %>% mutate(GDP = as.numeric(X.3)) %>% filter(GDP != "" & !is.na(GDP)) %>% arrange(desc(GDP)) %>% head(n=14)
merged %>% select(X, X.3) %>% mutate(GDP = as.numeric(trimws(X.3))) %>% filter(GDP != "" & !is.na(GDP)) %>% arrange(desc(GDP)) %>% head(n=14)
merged %>% select(X, X.3) %>% filter(GDP != "" & !is.na(GDP)) %>% mutate(GDP = as.numeric(trimws(X.3))) %>% arrange(desc(GDP)) %>% head(n=14)
merged %>% select(X, X.3) %>% filter(GDP != "" & !is.na(GDP)) %>% mutate(GDP = as.numeric(trimws(X.3)))
merged %>% filter(GDP != "" & !is.na(GDP)) %>% select(X, X.3) %>% mutate(GDP = as.numeric(trimws(X.3))) %>% arrange(desc(GDP)) %>% head(n=14)
merged
head(GDPC)
merged %>% filter(Gross.domestic.product.2012 != "" & !is.na(Gross.domestic.product.2012)) %>% select(X, X.3, Gross.domestic.product.2012) %>% arrange(desc(Gross.domestic.product.2012)) %>% head(n=14)
merged %>% filter(Gross.domestic.product.2012 != "" & !is.na(Gross.domestic.product.2012)) %>% select(X, X.3, Gross.domestic.product.2012) %>% arrange(desc(Gross.domestic.product.2012))
merged %>% filter(Gross.domestic.product.2012 != "" & !is.na(Gross.domestic.product.2012)) %>% mutate(GDP = as.numeric(Gross.domestic.product.2012)) %>% select(X, X.3, GDP, Gross.domestic.product.2012) %>% arrange(desc(GDP))
merged %>% filter(Gross.domestic.product.2012 != "" & !is.na(Gross.domestic.product.2012)) %>% mutate(GDP = as.numeric(Gross.domestic.product.2012)) %>% select(X, X.3, GDP, Gross.domestic.product.2012) %>% arrange(desc(GDP)) % head(13)
merged %>% filter(Gross.domestic.product.2012 != "" & !is.na(Gross.domestic.product.2012)) %>% mutate(GDP = as.numeric(Gross.domestic.product.2012)) %>% select(X, X.3, GDP, Gross.domestic.product.2012) %>% arrange(desc(GDP)) %>% head(13)
?as.numeric
as.numeric(99)
merged %>% filter(Gross.domestic.product.2012 != "" & !is.na(Gross.domestic.product.2012)) %>% mutate(final_ranking = as.numeric(Gross.domestic.product.2012)) %>% select(X, X.3, final_ranking, Gross.domestic.product.2012) %>% arrange(desc(final_ranking)) %>% head(13)
merged %>% filter(Gross.domestic.product.2012 != "" & !is.na(Gross.domestic.product.2012)) %>%
mutate(final_ranking = as.numeric(Gross.domestic.product.2012), CC = X) %>% group_by(CC) %>% select(CC, X, X.3, final_ranking, Gross.domestic.product.2012) %>% arrange(desc(final_ranking)) %>% head(13)
merged %>% filter(Gross.domestic.product.2012 != "" & !is.na(Gross.domestic.product.2012)) %>% mutate(final_ranking = as.numeric(Gross.domestic.product.2012)) %>% select(X, X.3, final_ranking, Gross.domestic.product.2012) %>% arrange(desc(final_ranking)) %>% head(13)
cleaned_merged <- merged %>% filter(Gross.domestic.product.2012 != "" & !is.na(Gross.domestic.product.2012)) %>% mutate(final_ranking = as.numeric(Gross.domestic.product.2012)) %>% select(X, X.3, final_ranking, Gross.domestic.product.2012)
head(cleaned_merged)
arrange(cleaned_merged, final_ranking)
arrange(cleaned_merged, desc(final_ranking))
unloadNamespace(plyr)
unloadNamespace("plyr")
arrange(cleaned_merged, final_ranking)
cleaned_merged
cleaned_merged %>% arrange(Gross.domestic.product.2012)
summary(cleaned_merged
)
type(cleaned_merged$Gross.domestic.product.2012)
class(cleaned_merged$Gross.domestic.product.2012)
cleaned_merged <- merged %>% filter(Gross.domestic.product.2012 != "" & !is.na(Gross.domestic.product.2012)) %>% mutate(final_ranking = as.numeric(levels(Gross.domestic.product.2012)[Gross.domestic.product.2012]) %>% select(X, X.3, final_ranking, Gross.domestic.product.2012)
)
cleaned_merged <- merged %>% filter(Gross.domestic.product.2012 != "" & !is.na(Gross.domestic.product.2012)) %>% mutate(final_ranking = as.numeric(levels(Gross.domestic.product.2012)[Gross.domestic.product.2012])) %>% select(X, X.3, final_ranking, Gross.domestic.product.2012)
head(cleaned_merged, n=13)
cleaned_merged %>% arrange(desC(final_ranking))
?arrange
cleaned_merged %>% arrange(desC(final_ranking))
cleaned_merged %>% arrange(final_ranking)
EDC <- EDC %>% filter(CountryCode != "" & !is.na(CountryCode))
EEDC <- ED %>% filter(CountryCode != "" & !is.na(CountryCode))
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
fileName <- paste("./data/gdp_", format(Sys.time(), "%Y%m%d"), ".csv", sep = "")
data <- download.file(fileUrl, destfile = fileName)
GDP <- read.csv(fileName)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
fileName <- paste("./data/ed_", format(Sys.time(), "%Y%m%d"), ".csv", sep = "")
data <- download.file(fileUrl, destfile = fileName)
ED <- read.csv(fileName)
GDPC <- GDP %>% filter(X != "" & !is.na(X)) %>%
mutate(CountryCode = X,
GDP_ranking =
as.numeric(levels(Gross.domestic.product.2012)[Gross.domestic.product.2012]))
EDC <- ED %>% filter(CountryCode != "" & !is.na(CountryCode))
merged <- merge(GDPC, EDC, by.x = "CountryCode", by.y = "CountryCode")
arranged <- merged %>% filter(GDP_ranking != "" &
!is.na(GDP_ranking)) %>% arrange(desc(GDP_ranking))
head(arranged,n=13)
merged <- merge(GDPC, EDC, by.x = "CountryCode", by.y = "CountryCode")
arranged <- merged %>% filter(GDP_ranking != "" &
!is.na(GDP_ranking)) %>% arrange(desc(GDP_ranking)) %>%
select(CountryCode, GDP_ranking, X, Gross.domestic.product.2012)
head(arranged,n=13)
tail(arranged,n=13)
EDC$Income.Group
arranged <- merged %>% filter(GDP_ranking != "" &
!is.na(GDP_ranking)) %>% arrange(desc(GDP_ranking)) %>%
select(CountryCode, GDP_ranking, X, Gross.domestic.product.2012, Income.Group)
grouped <- arranged %>% group_by(Income.Group)
summarized_by_income_gsroup <- arranged %>% group_by(Income.Group) %>%
summarise(mean(GDP_ranking))
summarized_by_income_gsroup
quantile(GDP, x = 5)
quantile(GDP, g = 5)
cut(GDP, g = 5)
cut(GDP, x = 5)
quantile(GDP)
quantile(GDP, na.rm=T)
quantile(GDPC)
cut?
?
;
?cut
table(cut(GDP, b=5))
table(cut(GDP$Gross.domestic.product.2012, b=5))
quantile(merged)
quantile(merged, na.rm = T)
quantile(merged$GDP_ranking, na.rm = T)
table(quantile(merged$GDP_ranking, na.rm = T))
table(quantile(merged$GDP_ranking, na.rm = T), merged$Income.Group)
quantile(merged$GDP_ranking, na.rm = T)
38/189
quantile(merged$GDP_ranking, probs = 0.8, na.rm = T)
summarized_by_income_gsroup <- arranged %>% group_by(Income.Group) %>%
summarise(mean(GDP_ranking))
summarized_by_income_gsroup
arranged %>% filter(GDP_ranking>152.4 & Income.Group == "Lower middle income")
arranged %>% filter(GDP_ranking>152.4 & Income.Group == "Lower middle income")
arranged
arranged %>% filter(GDP_ranking<152.4 & Income.Group == "Lower middle income")
quantile(merged$GDP_ranking, probs = 0.2, na.rm = T)
arranged %>% filter(GDP_ranking<38 & Income.Group == "Lower middle income")
arranged %>% filter(GDP_ranking<39 & Income.Group == "Lower middle income")
fileUrl <-"https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
fileName <- paste("./data/cameras_", format(Sys.time(), "%Y%m%d"), ".csv", sep = "")
data <- download.file(fileUrl, destfile = fileName)
list.files("./data")
cameras <- read.csv(fileName)
toltolower(names(cameras))
tolower(names(cameras))
splitNames = strsplit(names(cameras), "\\.")
splitNames
myList <- list(letters = c("A", "b", "c"), numbers = 1:3, matrix(1:25, ncol = 5))
myList
myList[A]
myList["A"]
head(myList)
?list
myList$letters
mylList
myList
splitNames[[6]][1]
firstElement <- function(x){x[1]}
sapply(splitNames,firstElement)
sub("\\.", "_", names(cameras),)
head(cameras)
grep("Caton Ave", cameras$street)
table(grep("Caton Ave", cameras$street))
grep("Caton Ave", cameras$street, value = T)
x = c("1jan1960"); z = as.Date(x, "%d%b%Y")
z
x
z
d2 = Sys.Date()
format(d2, "%a %b %d")
x = c("1Ian1960"); z = as.Date(x, "%d%b%Y")
z
x = c("111960"); z = as.Date(x, "%d%m%Y")
z
as.Date?
;
?as.Date
dates <- c("02/27/92", "02/27/92", "01/14/92", "02/28/92", "02/01/92")
as.Date(dates, "%m/%d/%y")
weekdays(d2)
months(d2)
julian(d2)
library(lubridate)
install.packages(
"lubritate"
)
install.packages("lubritate")
library(lubridate)
library("lubridate")
swirl()
library("swirl")
swirl()
Sys.getlocale("LC_TIME")
Sys.getlocale("LC_TIME")
bye()
Sys.getlocale("LC_TIME")
