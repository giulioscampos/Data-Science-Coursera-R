set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
rnorm
rnorm
?rnorm
?ppois
?rpois
?qpois
?lpois
?rpois
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
swirl()
library("swirl")
swirl()
library(dplyr)
mydf
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package = group_by(cran, package)
by_package <- group_by(cran, package)
by_package
summarize(cran)
summarize(by_package, mean(size))
count = n()
submit()
?n_distinct
by_package
cran
summarize(by_package, count=n())
summarize(by_package, count=n(), unique = n_distinct(p_id))
summarize(by_package, count=n(), unique = n_distinct(x = p_id)
()
)
summarize(by_package, count=n(), unique = n_distinct(x = p_id))
summarize(by_package, count=n(), unique = n_distinct(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count>579)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted = arrange(top_counts, desc(count))
top_counts_sorted = arrange(top_counts, desc(count))
?desc
?arrange
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
filter(pack_sum, unique>465)
top_unique <-filter(pack_sum, unique>465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(data, sex_class, count, -grade)
res <- gather(data, sex_class, count)
res <- gather(data, "sex_class", count)
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, into = c("sex", "class"))
submit()
students3
?gather
students3 %>%
gather(class, class1:class5 , na.rm = TRUE) %>%
print
students3 %>%
gather(class1:class5, class, class1:class5 , na.rm = TRUE) %>%
print
gather(students3, class, class1:class5, na.rm = T)
gather(students3, class1:class5, class, na.rm = T)
gather(students3, class1, class, na.rm = T)
gather(students3, class1:class5, class, na.rm = T)
gather(students3, class1:class5, class, -grade, na.rm = T)
gather(students3, c(class1:class5), class, -grade, na.rm = T)
gather(students3, c(class1:class5), class, na.rm = T)
gather(students3, class1:class5, c(class), na.rm = T)
gather(students3, class, class1:class5, na.rm = T)
gather(students3, class, class, class1:class5, na.rm = T)
submit()
students3
sumbit()
sumbmit()
submit()
?spread
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test ,midterm ) %>%
print
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test ,grade ) %>%
print
submit()
extract_numeric("class5")
reset()
extract_numeric("class5")
submit()
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, grade) %>%
mutate(class, extract_numeric(class))
### Call to mutate() goes here %>%
print
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, grade) %>%
mutate(extract_numeric(class), class)
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, grade) %>%
mutate(class, extract_numeric(class)) %>%
print
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, grade) %>%
mutate(class2, extract_numeric(class)) %>%
print
?mutate
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, grade) %>%
mutate(class = extract_numeric(class)) %>%
print
submit()
students4
submit()
submit()
student_info <- students4 %>%
select(id, name, sex) %>%
unique(name) %>%
print
?unique
student_info <- students4 %>%
select(id, name, sex) %>%
unique(id) %>%
print
student_info <- students4 %>%
select(id, name, sex) %>%
unique(id, incomparables = F) %>%
print
students4
students4 %>%
select(id, name, sex)
student_info <- students4 %>%
select(id, name, sex) %>%
unique(student_info) %>%
print
student_info <- students4 %>%
select(id, name, sex) %>%
unique(name) %>%
print
student_info <- students4 %>%
select(id, name, sex)
student_info
unique(student_info, x = "name")
unique(student_info, name)
unique(student_info, name, fromLast = T)
unique(student_info, id, fromLast = T)
unique(student_info, id)
unique(student_info, student_info)
unique(student_info)
submit()
submit()
submit()
submit()
pAssed
PASSED
passed
View(passed)
failed
?mutate
passed <- mutate(passed, status= final == 'A' | finalDefaultMethod()=='B' )
passed <- mutate(passed, status= final == 'A' | final=='B' )
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
packageVersion('dplyr')
?bind_rows
bind_rows(passed, failed)
sat
?separate()
submit()
sat %>%
select(-contains("total")) %>%
gather(part_sex, count, -score_range) %>%
separate(c("part", "sex"))
print
sat %>%
select(-contains("total")) %>%
gather(part_sex, count, -score_range) %>%
separate(c("part", "sex")) %>%
print
sat %>%
select(-contains("total")) %>%
gather(part_sex, count, -score_range) %>%
separate(part_sex, c("part", "sex")) %>%
print
submit()
sat %>%
select(-contains("total")) %>%
gather(part_sex, count, -score_range) %>%
separate(part_sex, c("part", "sex")) %>%
group_by(part, sex)
mutate(total = sum(count), prop = count/total
) %>% print
sat %>%
select(-contains("total")) %>%
gather(part_sex, count, -score_range) %>%
separate(part_sex, c("part", "sex")) %>%
group_by(part, sex) %>%
mutate(total = sum(count), prop = count/total
) %>%
print
submit()
s1 <- seq(1, 10, by=2)
s1
s2 <- seq(1, 10, length = 3)
s2
x <- c(1, 3, 8, 25, 100); seq(along = x)
